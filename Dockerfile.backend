# 后端API服务专用Dockerfile
FROM node:18-alpine

# 安装系统依赖
RUN apk add --no-cache \
    ffmpeg \
    python3 \
    make \
    g++ \
    cairo-dev \
    jpeg-dev \
    pango-dev \
    musl-dev \
    giflib-dev \
    pixman-dev \
    pangomm-dev \
    libjpeg-turbo-dev \
    freetype-dev

# 设置工作目录
WORKDIR /app

# 复制package.json和package-lock.json
COPY package*.json ./

# 只安装生产依赖
RUN npm ci --only=production

# 复制后端代码和必要文件
COPY backend/ ./backend/
COPY *.json ./
COPY *.js ./
COPY *.cjs ./

# 创建必要的目录
RUN mkdir -p temp

# 复制静态资源文件（如果存在）
COPY . /tmp/source/
RUN cp /tmp/source/*.png /app/ 2>/dev/null || echo "Warning: PNG files not found" && \
    cp /tmp/source/*.mov /app/ 2>/dev/null || echo "Warning: MOV files not found" && \
    cp /tmp/source/*.mp4 /app/ 2>/dev/null || echo "Warning: MP4 files not found" && \
    rm -rf /tmp/source

# 设置文件描述符限制
RUN echo "* soft nofile 65536" >> /etc/security/limits.conf && \
    echo "* hard nofile 65536" >> /etc/security/limits.conf

# 暴露API端口
EXPOSE 9091

# 设置环境变量
ENV NODE_ENV=production
ENV PORT=9091
ENV CHOKIDAR_USEPOLLING=false
ENV WATCHPACK_POLLING=false

# 启动API服务器
CMD ["node", "backend/dev-api-server-two-step.cjs"]